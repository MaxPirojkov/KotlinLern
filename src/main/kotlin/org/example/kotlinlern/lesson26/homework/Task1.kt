package org.example.kotlinlern.lesson26.homework

/*
Задания на отработку синтаксиса

 */
//Напишите функцию, которая принимает другую функцию без аргументов и возвращаемого значения.
fun func1(arg: () -> Unit) {}

//Создайте функцию, принимающую функцию с одним аргументом типа Int и возвращающую String.
fun func2(arg: (Int) -> String) {}

// Реализуйте функцию, ПРИНИМАЮЩУЮ функцию расширения типа Int, принимающую String и возвращающую Boolean.
fun func3(arg: Int.(String) -> Boolean) {}

//Напишите функцию, которая принимает функцию с двумя аргументами типа Double и возвращает Boolean.
fun func4(arg: (Double, Double) -> Boolean) {}

//Напишите функцию, которая принимает функцию с одним аргументом-дженериком T и возвращает List<T>.
fun <T> func5(arg: (T) -> List<T>) {}

//Создайте функцию, принимающую функцию с аргументом типа String и возвращающую другую функцию,
// принимающую Int и возвращающую Boolean.
fun func6(arg: (String) -> ((Int) -> Boolean)) {
}


//Напишите функцию, которая принимает
// список чисел,
// множество строк,
// функцию с аргументами типа List<Int> и Set<String> и возвращающую Map<String, Int>.
fun func7(
    arg1: List<Int>,
    arg2: Set<String>,
    arg3: (List<Int>, Set<String>) -> Map<String, Int>,
) {
}

//Напишите функцию, возвращающую строку,
// принимающую число и функцию, принимающую число и возвращающую строку
fun func8(arg: Int, arg2: (Int) -> String): String {
    return arg2(arg)
}

//Напишите функцию, принимающую функцию, которая возвращает функцию без аргументов и возвращаемого значения.
fun func9(arg: () -> () -> Unit) {}
